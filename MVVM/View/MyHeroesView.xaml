<UserControl x:Class="IOT1030_Phase2_GUI.MVVM.View.MyHeroesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:IOT1030_Phase2_GUI.MVVM.View"
			 xmlns:viewModel="clr-namespace:IOT1030_Phase2_GUI.MVVM.ViewModel"
			 d:DataContext="{d:DesignInstance Type=viewModel:MyHeroesViewModel}"
			 mc:Ignorable="d" 
             d:DesignHeight="450"
			 d:DesignWidth="700">
	<!-- Page background -->
	<Border Background="#383a46"
			CornerRadius="30">
		
		<!-- Base grid -->
		<Grid Margin="10">
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="600" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			
			<!-- My Heroes list background -->
			<Border Background="#261c32"
					CornerRadius="20"
					BorderThickness="3"
					BorderBrush="Black" 
					Grid.Column="1"/>
			
			<!-- My Heroes list grid -->
			<Grid Grid.Column="1"
				  Margin="15">
				<Grid.RowDefinitions>
					<RowDefinition Height="50" />
					<RowDefinition />
				</Grid.RowDefinitions>
				
				<!-- My Heroes title -->
				<TextBlock Text="My Heroes"
						   HorizontalAlignment="Center"
						   VerticalAlignment="Center"
						   Foreground="White"
						   FontSize="39"
						   FontFamily="Yu Gothic UI Semibold"
						   Grid.Row="0"
						   Margin="4" />
				
				<!-- The binding here is the list containing objects (HeroStats) -->
				<DataGrid ItemsSource="{Binding Heroes, UpdateSourceTrigger=PropertyChanged}"
							Foreground="Black"
							Background="Transparent"
							IsReadOnly="True"
							AutoGenerateColumns="False"
							HeadersVisibility="None"
							Grid.Column="0"
							Grid.Row="1"
							BorderThickness="0"
							GridLinesVisibility="None"
						  ScrollViewer.CanContentScroll="False">
					
					<!-- Custom Scrollbar Style -->
					<DataGrid.Resources>
						<Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Thumb}">
										<Grid x:Name="Grid">
											<Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent"/>
											<Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="Tag" Value="Horizontal">
												<Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
												<Setter TargetName="Rectangle1" Property="Height" Value="7" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
						
						<Style TargetType="ScrollBar">
							<Setter Property="Stylus.IsFlicksEnabled" Value="false" />
							<Setter Property="Foreground" Value="#FF444656" />
							<Setter Property="Background" Value="Transparent" />
							<Setter Property="Width" Value="10" />
							<Setter Property="MinWidth" Value="10"/>
							<Setter Property="MaxWidth" Value="10"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ScrollBar}">
										<Grid x:Name="GridRoot" Width="10" Background="{TemplateBinding Background}">
											<Grid.RowDefinitions>
												<RowDefinition Height="0.00001*" />
											</Grid.RowDefinitions>

											<Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
												<Track.Thumb>
													<Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
												</Track.Thumb>
												<Track.IncreaseRepeatButton>
													<RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
												</Track.IncreaseRepeatButton>
												<Track.DecreaseRepeatButton>
													<RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
												</Track.DecreaseRepeatButton>
											</Track>
										</Grid>

										<ControlTemplate.Triggers>
											<Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
												<Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
											</Trigger>
											<Trigger SourceName="Thumb" Property="IsDragging" Value="true">
												<Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
											</Trigger>

											<Trigger Property="IsEnabled" Value="false">
												<Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
											</Trigger>
											<Trigger Property="Orientation" Value="Horizontal">
												<Setter TargetName="GridRoot" Property="LayoutTransform">
													<Setter.Value>
														<RotateTransform Angle="-90" />
													</Setter.Value>
												</Setter>
												<Setter TargetName="PART_Track" Property="LayoutTransform">
													<Setter.Value>
														<RotateTransform Angle="-90" />
													</Setter.Value>
												</Setter>
												<Setter Property="Width" Value="Auto" />
												<Setter Property="Height" Value="12" />
												<Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
												<Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
												<Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</DataGrid.Resources>

					<!-- Changing the style of the DataGridCells to remove borders -->
					<DataGrid.CellStyle>
						<Style TargetType="{x:Type DataGridCell}">
							<Style.Setters>
								<Setter Property="Background"
											Value="Transparent" />
							</Style.Setters>
							<Style.Triggers>
								<Trigger Property="DataGridCell.IsSelected"
											 Value="True">
									<Setter Property="BorderBrush"
												Value="Transparent" />
									<Setter Property="BorderThickness"
												Value="0" />
									<Setter Property="Foreground"
												Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
									<Setter Property="Background"
												Value="Transparent" />
								</Trigger>
							</Style.Triggers>
						</Style>
					</DataGrid.CellStyle>

					<!-- Changing the style of the DataGridRows to remove borders -->
					<DataGrid.RowStyle>
						<Style TargetType="{x:Type DataGridRow}">
							<Style.Setters>
								<Setter Property="Background"
											Value="Transparent" />
							</Style.Setters>
						</Style>
					</DataGrid.RowStyle>

					<!-- Defining the columns of the datagrid -->
					<DataGrid.Columns>
						<!-- This is the definition of the column that uses this cell style -->
						<DataGridTemplateColumn Header="Class"
													Width="553">

							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<!-- This is what is displayed in this cell-->
									<Grid>
										<!-- Row background -->
										<Border Background="#113549"
													HorizontalAlignment="Stretch"
													Height="100"
													BorderBrush="Black"
													BorderThickness="1"
													CornerRadius="15"
													Margin="5">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="100" />
													<ColumnDefinition />
												</Grid.ColumnDefinitions>

												<!-- Class image -->
												<Border Background="#3b0e0d"
															CornerRadius="15"
															Margin="5"
															BorderThickness="3"
															BorderBrush="Black"
															Grid.Column="0"
															Grid.Row="0">

													<Image Source="{Binding ImagePath, UpdateSourceTrigger=PropertyChanged}"
															   Margin="10" />
												</Border>

												<!-- Hero name and class name-->
												<Grid Grid.Column="1"
														  Margin="10">
													<Grid.RowDefinitions>
														<RowDefinition />
														<RowDefinition />
													</Grid.RowDefinitions>
													<TextBlock Text="{Binding Name}"
																   FontSize="25"
																   VerticalAlignment="Center"
																   FontFamily="Yu Gothic UI Semibold"
																   Foreground="White" />
													<TextBlock Text="{Binding ClassName}"
																   FontSize="25"
																   Grid.Row="1"
																   VerticalAlignment="Center"
																   FontFamily="Yu Gothic UI Semibold"
																   Foreground="#c6c6c6" />
												</Grid>
											</Grid>
										</Border>

										<!-- Button to go to hero display view for this hero -->
										<Button Style="{StaticResource RoundedMyHeroButtonTheme}"
													Margin="5"
													Width="540"
													HorizontalAlignment="Left"
													Background="Transparent"
													Opacity="0.5"
													Command="{Binding Path=DataContext.HeroDisplayCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
													CommandParameter="{Binding Name}" />

									</Grid>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
					</DataGrid.Columns>
				</DataGrid>

			</Grid>


		</Grid>
	</Border>
</UserControl>
